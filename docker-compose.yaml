version: "3.7"

services:
  provisioning-service:
    image: provisioning-service:latest
    build: './provisioning-service'
    ports:
      - "8080:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVER: "broker01:29092"
      SERVER_PORT: 8080
    networks:
      - kafka-cluster
    depends_on:
      broker01:
        condition: service_healthy
        
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    healthcheck:
      test: [ "CMD-SHELL", "echo ruok | nc -w 2 zookeeper 2181" ]
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
    networks:
      - kafka-cluster
    volumes:
      - "zookeper_data:/var/lib/zookeeper"
    user: "0:0"

  broker01:
    image: confluentinc/cp-kafka:latest
    container_name: "broker01"
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server broker01:29092 --describe" ]
      interval: 5s
      timeout: 10s
      retries: 3
    ports:
      - "9092:9092"
    networks:
      - kafka-cluster
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092,PLAINTEXT_INTERNAL://broker01:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    volumes:
      - kafka_data:/var/lib/kafka/data
    user: "0:0"

volumes:
  zookeper_data:
  kafka_data:

networks:
  kafka-cluster:
